{
  "swagger" : "2.0",
  "host" : "open-api-user.herokuapp.com",
  "basePath" : "/v3",
  "info" : {
    "title" : "express-openapi sample project by AK",
    "version" : "3.0.0"
  },
  "definitions" : {
    "Error" : {
      "additionalProperties" : true
    },
    "User" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "friends" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        }
      },
      "required" : [ "name" ]
    }
  },
  "paths" : {
    "/users" : {
      "delete" : {
        "description" : "Delete users.",
        "operationId" : "deleteUsers",
        "tags" : [ "users" ],
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Users were successfully deleted."
          }
        }
      },
      "post" : {
        "description" : "Create a new user.",
        "operationId" : "createUser",
        "tags" : [ "users", "creating" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "type" : "string",
        "required" : true,
        "description" : "Fred's age."
      } ],
      "get" : {
        "description" : "Retrieve a user.",
        "operationId" : "getUser",
        "tags" : [ "users", "fooey" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "type" : "string",
          "pattern" : "^fred$",
          "description" : "The name of this person.  It may only be \"fred\"."
        }, {
          "name" : "age",
          "in" : "query",
          "type" : "integer",
          "description" : "Fred's age.",
          "default" : 80
        } ],
        "responses" : {
          "200" : {
            "description" : "Requested user",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apiDocs" : {
      "get" : {
        "operationId" : "getApiDoc",
        "description" : "Returns the requested apiDoc",
        "parameters" : [ {
          "description" : "The type of apiDoc to return.",
          "in" : "query",
          "name" : "type",
          "type" : "string",
          "enum" : [ "apiDoc", "operationDoc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested apiDoc.",
            "schema" : {
              "type" : "object"
            }
          },
          "default" : {
            "description" : "The requested apiDoc."
          }
        }
      }
    }
  },
  "tags" : [ {
    "description" : "Everything users",
    "name" : "users"
  } ]
}